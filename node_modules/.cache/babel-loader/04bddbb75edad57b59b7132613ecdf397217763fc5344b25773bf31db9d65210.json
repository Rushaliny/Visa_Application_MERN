{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MongoCryptKMSRequestNetworkTimeoutError = exports.MongoCryptAzureKMSRequestError = exports.MongoCryptCreateEncryptedCollectionError = exports.MongoCryptCreateDataKeyError = exports.MongoCryptInvalidArgumentError = exports.MongoCryptError = void 0;\nconst error_1 = require(\"../error\");\n/**\n * @public\n * An error indicating that something went wrong specifically with MongoDB Client Encryption\n */\nclass MongoCryptError extends error_1.MongoError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(message, options);\n  }\n  get name() {\n    return 'MongoCryptError';\n  }\n}\nexports.MongoCryptError = MongoCryptError;\n/**\n * @public\n *\n * An error indicating an invalid argument was provided to an encryption API.\n */\nclass MongoCryptInvalidArgumentError extends MongoCryptError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message) {\n    super(message);\n  }\n  get name() {\n    return 'MongoCryptInvalidArgumentError';\n  }\n}\nexports.MongoCryptInvalidArgumentError = MongoCryptInvalidArgumentError;\n/**\n * @public\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create data keys\n */\nclass MongoCryptCreateDataKeyError extends MongoCryptError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(encryptedFields, _ref) {\n    let {\n      cause\n    } = _ref;\n    super(`Unable to complete creating data keys: ${cause.message}`, {\n      cause\n    });\n    this.encryptedFields = encryptedFields;\n  }\n  get name() {\n    return 'MongoCryptCreateDataKeyError';\n  }\n}\nexports.MongoCryptCreateDataKeyError = MongoCryptCreateDataKeyError;\n/**\n * @public\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create a collection\n */\nclass MongoCryptCreateEncryptedCollectionError extends MongoCryptError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(encryptedFields, _ref2) {\n    let {\n      cause\n    } = _ref2;\n    super(`Unable to create collection: ${cause.message}`, {\n      cause\n    });\n    this.encryptedFields = encryptedFields;\n  }\n  get name() {\n    return 'MongoCryptCreateEncryptedCollectionError';\n  }\n}\nexports.MongoCryptCreateEncryptedCollectionError = MongoCryptCreateEncryptedCollectionError;\n/**\n * @public\n * An error indicating that mongodb-client-encryption failed to auto-refresh Azure KMS credentials.\n */\nclass MongoCryptAzureKMSRequestError extends MongoCryptError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message, body) {\n    super(message);\n    this.body = body;\n  }\n  get name() {\n    return 'MongoCryptAzureKMSRequestError';\n  }\n}\nexports.MongoCryptAzureKMSRequestError = MongoCryptAzureKMSRequestError;\n/** @public */\nclass MongoCryptKMSRequestNetworkTimeoutError extends MongoCryptError {\n  get name() {\n    return 'MongoCryptKMSRequestNetworkTimeoutError';\n  }\n}\nexports.MongoCryptKMSRequestNetworkTimeoutError = MongoCryptKMSRequestNetworkTimeoutError;","map":{"version":3,"names":["error_1","require","MongoCryptError","MongoError","constructor","message","options","arguments","length","undefined","name","exports","MongoCryptInvalidArgumentError","MongoCryptCreateDataKeyError","encryptedFields","_ref","cause","MongoCryptCreateEncryptedCollectionError","_ref2","MongoCryptAzureKMSRequestError","body","MongoCryptKMSRequestNetworkTimeoutError"],"sources":["C:\\Users\\asmee\\Documents\\Visa-Application\\node_modules\\mongodb\\src\\client-side-encryption\\errors.ts"],"sourcesContent":["import { type Document } from '../bson';\nimport { MongoError } from '../error';\n\n/**\n * @public\n * An error indicating that something went wrong specifically with MongoDB Client Encryption\n */\nexport class MongoCryptError extends MongoError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, options: { cause?: Error } = {}) {\n    super(message, options);\n  }\n\n  override get name() {\n    return 'MongoCryptError';\n  }\n}\n\n/**\n * @public\n *\n * An error indicating an invalid argument was provided to an encryption API.\n */\nexport class MongoCryptInvalidArgumentError extends MongoCryptError {\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string) {\n    super(message);\n  }\n\n  override get name() {\n    return 'MongoCryptInvalidArgumentError';\n  }\n}\n/**\n * @public\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create data keys\n */\nexport class MongoCryptCreateDataKeyError extends MongoCryptError {\n  encryptedFields: Document;\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(encryptedFields: Document, { cause }: { cause: Error }) {\n    super(`Unable to complete creating data keys: ${cause.message}`, { cause });\n    this.encryptedFields = encryptedFields;\n  }\n\n  override get name() {\n    return 'MongoCryptCreateDataKeyError';\n  }\n}\n\n/**\n * @public\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create a collection\n */\nexport class MongoCryptCreateEncryptedCollectionError extends MongoCryptError {\n  encryptedFields: Document;\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(encryptedFields: Document, { cause }: { cause: Error }) {\n    super(`Unable to create collection: ${cause.message}`, { cause });\n    this.encryptedFields = encryptedFields;\n  }\n\n  override get name() {\n    return 'MongoCryptCreateEncryptedCollectionError';\n  }\n}\n\n/**\n * @public\n * An error indicating that mongodb-client-encryption failed to auto-refresh Azure KMS credentials.\n */\nexport class MongoCryptAzureKMSRequestError extends MongoCryptError {\n  /** The body of the http response that failed, if present. */\n  body?: Document;\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  constructor(message: string, body?: Document) {\n    super(message);\n    this.body = body;\n  }\n\n  override get name(): string {\n    return 'MongoCryptAzureKMSRequestError';\n  }\n}\n\n/** @public */\nexport class MongoCryptKMSRequestNetworkTimeoutError extends MongoCryptError {\n  override get name(): string {\n    return 'MongoCryptKMSRequestNetworkTimeoutError';\n  }\n}\n"],"mappings":";;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA;;;;AAIA,MAAaC,eAAgB,SAAQF,OAAA,CAAAG,UAAU;EAC7C;;;;;;;;;;;EAWAC,YAAYC,OAAe,EAAiC;IAAA,IAA/BC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA6B,EAAE;IAC1D,KAAK,CAACF,OAAO,EAAEC,OAAO,CAAC;EACzB;EAEA,IAAaI,IAAIA,CAAA;IACf,OAAO,iBAAiB;EAC1B;;AAlBFC,OAAA,CAAAT,eAAA,GAAAA,eAAA;AAqBA;;;;;AAKA,MAAaU,8BAA+B,SAAQV,eAAe;EACjE;;;;;;;;;;;EAWAE,YAAYC,OAAe;IACzB,KAAK,CAACA,OAAO,CAAC;EAChB;EAEA,IAAaK,IAAIA,CAAA;IACf,OAAO,gCAAgC;EACzC;;AAlBFC,OAAA,CAAAC,8BAAA,GAAAA,8BAAA;AAoBA;;;;AAIA,MAAaC,4BAA6B,SAAQX,eAAe;EAE/D;;;;;;;;;;;EAWAE,YAAYU,eAAyB,EAAAC,IAAA,EAA6B;IAAA,IAA3B;MAAEC;IAAK,CAAoB,GAAAD,IAAA;IAChE,KAAK,CAAC,0CAA0CC,KAAK,CAACX,OAAO,EAAE,EAAE;MAAEW;IAAK,CAAE,CAAC;IAC3E,IAAI,CAACF,eAAe,GAAGA,eAAe;EACxC;EAEA,IAAaJ,IAAIA,CAAA;IACf,OAAO,8BAA8B;EACvC;;AApBFC,OAAA,CAAAE,4BAAA,GAAAA,4BAAA;AAuBA;;;;AAIA,MAAaI,wCAAyC,SAAQf,eAAe;EAE3E;;;;;;;;;;;EAWAE,YAAYU,eAAyB,EAAAI,KAAA,EAA6B;IAAA,IAA3B;MAAEF;IAAK,CAAoB,GAAAE,KAAA;IAChE,KAAK,CAAC,gCAAgCF,KAAK,CAACX,OAAO,EAAE,EAAE;MAAEW;IAAK,CAAE,CAAC;IACjE,IAAI,CAACF,eAAe,GAAGA,eAAe;EACxC;EAEA,IAAaJ,IAAIA,CAAA;IACf,OAAO,0CAA0C;EACnD;;AApBFC,OAAA,CAAAM,wCAAA,GAAAA,wCAAA;AAuBA;;;;AAIA,MAAaE,8BAA+B,SAAQjB,eAAe;EAGjE;;;;;;;;;;;EAWAE,YAAYC,OAAe,EAAEe,IAAe;IAC1C,KAAK,CAACf,OAAO,CAAC;IACd,IAAI,CAACe,IAAI,GAAGA,IAAI;EAClB;EAEA,IAAaV,IAAIA,CAAA;IACf,OAAO,gCAAgC;EACzC;;AArBFC,OAAA,CAAAQ,8BAAA,GAAAA,8BAAA;AAwBA;AACA,MAAaE,uCAAwC,SAAQnB,eAAe;EAC1E,IAAaQ,IAAIA,CAAA;IACf,OAAO,yCAAyC;EAClD;;AAHFC,OAAA,CAAAU,uCAAA,GAAAA,uCAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}