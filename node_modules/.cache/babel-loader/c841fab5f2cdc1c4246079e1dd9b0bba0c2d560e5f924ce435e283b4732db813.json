{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.callback = void 0;\nconst error_1 = require(\"../../../error\");\nconst utils_1 = require(\"../../../utils\");\n/** GCP base URL. */\nconst GCP_BASE_URL = 'http://metadata/computeMetadata/v1/instance/service-accounts/default/identity';\n/** GCP request headers. */\nconst GCP_HEADERS = Object.freeze({\n  'Metadata-Flavor': 'Google'\n});\n/** Error for when the token audience is missing in the environment. */\nconst TOKEN_RESOURCE_MISSING_ERROR = 'TOKEN_RESOURCE must be set in the auth mechanism properties when ENVIRONMENT is gcp.';\n/**\n * The callback function to be used in the automated callback workflow.\n * @param params - The OIDC callback parameters.\n * @returns The OIDC response.\n */\nconst callback = async params => {\n  const tokenAudience = params.tokenAudience;\n  if (!tokenAudience) {\n    throw new error_1.MongoGCPError(TOKEN_RESOURCE_MISSING_ERROR);\n  }\n  return await getGcpTokenData(tokenAudience);\n};\nexports.callback = callback;\n/**\n * Hit the GCP endpoint to get the token data.\n */\nasync function getGcpTokenData(tokenAudience) {\n  const url = new URL(GCP_BASE_URL);\n  url.searchParams.append('audience', tokenAudience);\n  const response = await (0, utils_1.get)(url, {\n    headers: GCP_HEADERS\n  });\n  if (response.status !== 200) {\n    throw new error_1.MongoGCPError(`Status code ${response.status} returned from the GCP endpoint. Response body: ${response.body}`);\n  }\n  return {\n    accessToken: response.body\n  };\n}","map":{"version":3,"names":["error_1","require","utils_1","GCP_BASE_URL","GCP_HEADERS","Object","freeze","TOKEN_RESOURCE_MISSING_ERROR","callback","params","tokenAudience","MongoGCPError","getGcpTokenData","exports","url","URL","searchParams","append","response","get","headers","status","body","accessToken"],"sources":["C:\\Users\\asmee\\Documents\\Visa-Application\\node_modules\\mongodb\\src\\cmap\\auth\\mongodb_oidc\\gcp_machine_workflow.ts"],"sourcesContent":["import { MongoGCPError } from '../../../error';\nimport { get } from '../../../utils';\nimport type { OIDCCallbackFunction, OIDCCallbackParams, OIDCResponse } from '../mongodb_oidc';\n\n/** GCP base URL. */\nconst GCP_BASE_URL =\n  'http://metadata/computeMetadata/v1/instance/service-accounts/default/identity';\n\n/** GCP request headers. */\nconst GCP_HEADERS = Object.freeze({ 'Metadata-Flavor': 'Google' });\n\n/** Error for when the token audience is missing in the environment. */\nconst TOKEN_RESOURCE_MISSING_ERROR =\n  'TOKEN_RESOURCE must be set in the auth mechanism properties when ENVIRONMENT is gcp.';\n\n/**\n * The callback function to be used in the automated callback workflow.\n * @param params - The OIDC callback parameters.\n * @returns The OIDC response.\n */\nexport const callback: OIDCCallbackFunction = async (\n  params: OIDCCallbackParams\n): Promise<OIDCResponse> => {\n  const tokenAudience = params.tokenAudience;\n  if (!tokenAudience) {\n    throw new MongoGCPError(TOKEN_RESOURCE_MISSING_ERROR);\n  }\n  return await getGcpTokenData(tokenAudience);\n};\n\n/**\n * Hit the GCP endpoint to get the token data.\n */\nasync function getGcpTokenData(tokenAudience: string): Promise<OIDCResponse> {\n  const url = new URL(GCP_BASE_URL);\n  url.searchParams.append('audience', tokenAudience);\n  const response = await get(url, {\n    headers: GCP_HEADERS\n  });\n  if (response.status !== 200) {\n    throw new MongoGCPError(\n      `Status code ${response.status} returned from the GCP endpoint. Response body: ${response.body}`\n    );\n  }\n  return { accessToken: response.body };\n}\n"],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AACA,MAAAC,OAAA,GAAAD,OAAA;AAGA;AACA,MAAME,YAAY,GAChB,+EAA+E;AAEjF;AACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC;EAAE,iBAAiB,EAAE;AAAQ,CAAE,CAAC;AAElE;AACA,MAAMC,4BAA4B,GAChC,sFAAsF;AAExF;;;;;AAKO,MAAMC,QAAQ,GAAyB,MAC5CC,MAA0B,IACD;EACzB,MAAMC,aAAa,GAAGD,MAAM,CAACC,aAAa;EAC1C,IAAI,CAACA,aAAa,EAAE;IAClB,MAAM,IAAIV,OAAA,CAAAW,aAAa,CAACJ,4BAA4B,CAAC;EACvD;EACA,OAAO,MAAMK,eAAe,CAACF,aAAa,CAAC;AAC7C,CAAC;AARYG,OAAA,CAAAL,QAAQ,GAAAA,QAAA;AAUrB;;;AAGA,eAAeI,eAAeA,CAACF,aAAqB;EAClD,MAAMI,GAAG,GAAG,IAAIC,GAAG,CAACZ,YAAY,CAAC;EACjCW,GAAG,CAACE,YAAY,CAACC,MAAM,CAAC,UAAU,EAAEP,aAAa,CAAC;EAClD,MAAMQ,QAAQ,GAAG,MAAM,IAAAhB,OAAA,CAAAiB,GAAG,EAACL,GAAG,EAAE;IAC9BM,OAAO,EAAEhB;GACV,CAAC;EACF,IAAIc,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IAC3B,MAAM,IAAIrB,OAAA,CAAAW,aAAa,CACrB,eAAeO,QAAQ,CAACG,MAAM,mDAAmDH,QAAQ,CAACI,IAAI,EAAE,CACjG;EACH;EACA,OAAO;IAAEC,WAAW,EAAEL,QAAQ,CAACI;EAAI,CAAE;AACvC"},"metadata":{},"sourceType":"script","externalDependencies":[]}